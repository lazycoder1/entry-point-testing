import { decodeAbiParameters, decodeErrorResult, decodeFunctionResult, type Hex } from "viem"
import { EPAbi } from "./abis/EP"
import { EPSAbi } from "./abis/EPS"
import { PEPSAbi } from "./abis/PEPS"

const error = "0x000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000010499410554000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000084220266b600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000001441413234207369676e6174757265206572726f720000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"

const returnBytes = decodeAbiParameters(
    [{ name: "ret", type: "bytes[]" }],
    error
)

const decodedError1 = decodeErrorResult({
    abi: EPSAbi,
    data: returnBytes[0][0]
})
if (decodedError1 != undefined && decodedError1.args != undefined) {
    const decodedError2 = decodeErrorResult({
        abi: EPSAbi,
        data: decodedError1.args[1] as Hex
    })

    console.log(decodedError2)
}